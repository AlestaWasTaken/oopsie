class TerminalAddon{#terminal;#history;#historyIndex;#freezed;#disposables;#suggestions;#resizeL;constructor(){this.#disposables=[],this.#freezed=!1,this.input="",this.cursor=0,this._currentPrompt={prompt:"",autoCompletionSuggestions:()=>[],callback:s=>{}},this.#history=[],this.#historyIndex=0,this.#suggestions=null,this.#resizeL=0}activate(s){this.#terminal=s,this.#disposables.push(s.onData(s=>!this.#freezed&&"\t"!=s&&null!=this.#suggestions&&(this.#suggestions=null))),this.#disposables.push(s.onData(s=>!this.#freezed&&this.#handleEscapeSequences(s))),this.#disposables.push(s.onData(s=>!this.#freezed&&this.#handleSpecialCharacters(s))),this.#disposables.push(s.onData(s=>!this.#freezed&&this.#handleNormalKeys(s)))}dispose(){this.#disposables.forEach(s=>s.dispose()),this.#disposables.length=0}prompt(s,t={}){var{newLine:t=!0,callback:i=s=>{},autoCompletionSuggestions:r}=t;this._currentPrompt.prompt=s,this._currentPrompt.autoCompletionSuggestions=r??(()=>[]),this._currentPrompt.callback=i??(()=>{}),this.input="",this.cursor=0,this.#terminal.write((t?"\r\n":"")+"[0m"+s,()=>{this.#isNextNL()&&(this.#resizeL++,this.moveCursor(1,{visual:!0}),this.moveCursor(-1,{visual:!0}))})}#handleEscapeSequences(s){var t=s.charCodeAt(0);if(27==t||"\b"==s)switch(s.substr(1)){case"[A":case"[B":var i="[A"==s.substr(1);i&&this.#historyIndex-1<0||!i&&this.#historyIndex==this.#history.length||(i=this.#history[(i?this.#historyIndex--:this.#historyIndex++)+(i?-1:1)]??"",this.moveCursor(this.input.length),this.erase(-this.input.length),this.input=i,this.cursor=this.input.length,this.#terminal.write(i));break;case"[D":this.moveCursor(-1);break;case"[C":this.moveCursor(1);break;case"[3~":this.erase(1);break;case"[H":this.moveCursor(-this.input.length);break;case"[F":this.moveCursor(this.input.length);break;case"[1;5D":this.moveCursor(this.#leftBoundary()-this.cursor);break;case"[1;5C":this.moveCursor(this.#rightBoundary()-this.cursor);break;case"[3;3~":case"[3;5~":this.erase(this.#rightBoundary()-this.cursor);break;default:""!=s.substr(1)&&"\b"!=s||this.erase(this.#leftBoundary()-this.cursor)}}#handleSpecialCharacters(s){var t=s.charCodeAt(0);if(!(32<=t&&127!==t))switch(s){case"":this.erase(-1);break;case"\r":null!=this._currentPrompt.callback&&this._currentPrompt.callback("SUBMIT");break;case"":this.moveCursor(this.input.length),this.#terminal.write("^C"),null!=this._currentPrompt.callback&&this._currentPrompt.callback("TERMINATE");break;case"\t":var i,r,e=this.#autoComplete();null!=e&&(this.erase(this.#suggestions.boundaryIndex-this.cursor),i=this.input,r=this.cursor,this.moveCursor(this.input.length),this.erase(-this.input.length),this.input=i.substr(0,r)+e+i.substr(r),this.cursor=r+e.length,this.#terminal.write(this.input),this.moveCursor(this.cursor-this.input.length,{visual:!0}));break;case"":for(let s=0;s<this.#terminal._core.buffer._cols;s++)this.#handleNormalKeys("a")}}#autoComplete(){if(null==this.#suggestions){var s=this.#leftBoundary(),t=this.input.slice(s,this.cursor),t=this._currentPrompt.autoCompletionSuggestions(t);if(null==t||0===t.length)return this.#suggestions=null;this.#suggestions={index:0,list:t,boundaryIndex:s}}return this.#suggestions.index=(this.#suggestions.index+1)%this.#suggestions.list.length,this.#suggestions.list[this.#suggestions.index]}#handleNormalKeys(s){var t;(s>=String.fromCharCode(32)&&s<=String.fromCharCode(126)||"Â "<=s)&&(this.input=this.input.substr(0,this.cursor)+s+this.input.substr(this.cursor),this.cursor!=this.input.length-1?(t=this.input.slice(this.cursor+1),this.#terminal.write(s+t),this.moveCursor(-(t.length-(this.#isNextNL()?1:0)),{visual:!0})):this.#terminal.write(s+(this.#isNextNL()?" \b[1P":"")),this.cursor++)}moveCursor(i,s={}){var{visual:s=!1}=s;if(!s&&this.cursor+i>=this.input.length&&(i=this.input.length-this.cursor),0!=(i=!s&&this.cursor+i<0?-this.cursor:i)){if(0<this.rows()&&(this.#terminal._core.buffer.x+i<0||this.#terminal._core.buffer.x+i>this.#terminal._core.buffer._cols-1)){let s,t;this.#terminal._core.buffer.x+i<0?(s=Math.abs(this.#terminal._core.buffer.x-Math.abs(i)),t=Math.floor(s/this.#terminal._core.buffer._cols)+1,s%this.#terminal._core.buffer._cols==0&&t--):(s=Math.abs(this.#terminal._core.buffer.x+Math.abs(i)),t=Math.floor(s/this.#terminal._core.buffer._cols)),this.#terminal.write(`[${t}${i<0?"A":"B"}[`+this.#terminal._core.buffer._cols+(i<0?"D":"C")+(i<0?s%this.#terminal._core.buffer._cols!=0?`[${this.#terminal._core.buffer._cols-s%this.#terminal._core.buffer._cols}C`:"":`[${this.#terminal._core.buffer._cols-s%this.#terminal._core.buffer._cols-1}D`))}else this.#terminal.write("["+Math.abs(i)+(0<=i?"C":"D"));s||(this.cursor+=i)}}erase(s){var t,i,r=s<0;r&&this.cursor<=0||!r&&this.cursor>=this.input.length||(t=this.input.slice(this.cursor+(r?0:s)),i=this.input.slice(0,this.cursor-(r?Math.abs(s):0)),r&&this.moveCursor(s),this.#terminal.write(`[s[J${t}[u`),this.input=i+t)}setHistory(s=[]){Array.isArray(s)&&(this.#history=s,this.#historyIndex=this.#history.length)}addHistory(s,t=null){this.#history.push(s),this.#historyIndex=this.#history.length,null!=t&&t(this.#history)}getHistory(){return this.#history}freeze(s=!0,t={}){var{hideCursor:t=!0}=t,t=!!t;this.#freezed=s=!!s,t&&(this.#terminal._core._inputHandler._coreService.isCursorHidden=s,this.#terminal._core.refresh())}isFreezed(){return this.#freezed}resize(i){if(null!=i){let t=this.#terminal._core.buffer._cols;this.#terminal.write("\r\n",()=>{var s;i.fit(),this.#freezed||(this.#terminal.write("[1A"),s=(this._currentPrompt.prompt.length+addon.input.length)%this.#terminal._core.buffer._cols,this.moveCursor(s,{visual:!0}),t!=this.#terminal._core.buffer._cols&&(0==s?(addon.moveCursor(this.#terminal._core.buffer._cols,{visual:!0}),this.#resizeL++):0<this.#resizeL&&(this.#terminal.write("["+this.#resizeL+"A"),this.#resizeL=0)))})}}#isNextNL(){return(this.input.length+this._currentPrompt.prompt.length)%this.#terminal._core.buffer._cols==0}rows(){return Math.ceil((this.input.length+this._currentPrompt.prompt.length)/this.#terminal._core.buffer._cols)-1+(this.#isNextNL()?1:0)}#wordBoundaries(s=!0){var t,i=[],r=/\w+/g;if(null==this.input)return[];for(;t=r.exec(this.input);)i.push(t.index+(s?0:t[0].length));return i}#leftBoundary(){return this.#wordBoundaries().reverse().find(s=>s<this.cursor)??0}#rightBoundary(){return this.#wordBoundaries().find(s=>s>this.cursor)??this.input.length}}